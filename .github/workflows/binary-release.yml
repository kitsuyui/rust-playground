name: binary release
on:
  - push

jobs:
  build-in-ubuntu:
    name: binary release
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - arm-unknown-linux-gnueabihf
          - arm-unknown-linux-musleabihf
          - x86_64-pc-windows-gnu

    runs-on: ${{ matrix.os }}
    env:
      NAME: kitsuyui-rust-playground  # executable binary name
      ARCH: ${{ matrix.arch }}
      OS: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.arch }}
      - uses: Swatinem/rust-cache@v2
      - name: Install dependencies
        run: |
          sudo apt-get install -qq crossbuild-essential-arm64 crossbuild-essential-armhf mingw-w64

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --verbose --target ${{ matrix.arch }}

      - name: Compress
        run: |
          mkdir -p ./artifacts
          if [[ $ARCH =~ ^.*windows.*$ ]]; then
              EXEC=$NAME.exe
          else
              EXEC=$NAME
          fi
          if [[ $GITHUB_REF_TYPE =~ ^tag$ ]]; then
            TAG=$GITHUB_REF_NAME
          else
            TAG=$GITHUB_SHA
          fi
          mv ./target/$ARCH/release/$EXEC ./$EXEC
          tar -czf ./artifacts/$NAME-$ARCH-$TAG.tar.gz $EXEC

      - name: Archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: result
          path: |
            ./artifacts

  build-in-macos:
    name: binary release
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        arch:
          - x86_64-apple-darwin
          - aarch64-apple-darwin

    runs-on: ${{ matrix.os }}
    env:
      NAME: kitsuyui-rust-playground  # executable binary name
      ARCH: ${{ matrix.arch }}
      OS: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.arch }}
      - uses: Swatinem/rust-cache@v2
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --verbose --target ${{ matrix.arch }}

      - name: Compress
        run: |
          mkdir -p ./artifacts
          if [[ $ARCH =~ ^.*windows.*$ ]]; then
              EXEC=$NAME.exe
          else
              EXEC=$NAME
          fi
          if [[ $GITHUB_REF_TYPE =~ ^tag$ ]]; then
            TAG=$GITHUB_REF_NAME
          else
            TAG=$GITHUB_SHA
          fi
          mv ./target/$ARCH/release/$EXEC ./$EXEC
          tar -czf ./artifacts/$NAME-$ARCH-$TAG.tar.gz $EXEC

      - name: Archive artifact
        uses: actions/upload-artifact@v3
        with:
          name: result
          path: |
            ./artifacts

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-in-ubuntu, build-in-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: result
          path: ./artifacts
      - name: List
        run: find ./artifacts
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*.tar.gz
